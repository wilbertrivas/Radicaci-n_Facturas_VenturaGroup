/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;
 
import Controladores.ControlDB_EnvioDocumento;
import Controladores.ControlDB_RecibirDocumento;
import Modelos.Consultas.ConsultarDocumentosParaEnvios;
import Modelos.Consultas.ConsultarDocumentosParaRecibir;
import Modelos.Usuario;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wrivas
 */
public class Recepcion_Registrar extends javax.swing.JPanel {
    Usuario user;
    
    public Recepcion_Registrar(Usuario u) {
        initComponents();
        user=u;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConfirmarRecibido = new javax.swing.JPopupMenu();
        Confirmar = new javax.swing.JMenuItem();
        buscarDocumento = new javax.swing.JTextField();
        BuscarDocumento = new javax.swing.JButton();
        limpiarDocumento = new javax.swing.JButton();
        cancelarDocumento = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListadoBusquedaDocumento = new javax.swing.JTable();

        Confirmar.setText("ConfirmarRecibido");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });
        ConfirmarRecibido.add(Confirmar);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscarDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarDocumentoKeyPressed(evt);
            }
        });
        add(buscarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 250, 30));

        BuscarDocumento.setBackground(new java.awt.Color(255, 255, 255));
        BuscarDocumento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BuscarDocumento.setText("BUSCAR");
        BuscarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarDocumentoActionPerformed(evt);
            }
        });
        add(BuscarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 140, 40));

        limpiarDocumento.setBackground(new java.awt.Color(255, 255, 255));
        limpiarDocumento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        limpiarDocumento.setText("LIMPIAR");
        limpiarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDocumentoActionPerformed(evt);
            }
        });
        add(limpiarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 140, 40));

        cancelarDocumento.setBackground(new java.awt.Color(255, 255, 255));
        cancelarDocumento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cancelarDocumento.setText("CANCELAR");
        cancelarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarDocumentoActionPerformed(evt);
            }
        });
        add(cancelarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 160, 40));

        ListadoBusquedaDocumento = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        ListadoBusquedaDocumento.setBackground(new java.awt.Color(153, 204, 255));
        ListadoBusquedaDocumento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ListadoBusquedaDocumento.setComponentPopupMenu(ConfirmarRecibido);
        ListadoBusquedaDocumento.setFocusable(false);
        ListadoBusquedaDocumento.setGridColor(new java.awt.Color(0, 204, 204));
        ListadoBusquedaDocumento.setSelectionBackground(new java.awt.Color(255, 102, 102));
        ListadoBusquedaDocumento.getTableHeader().setReorderingAllowed(false);
        ListadoBusquedaDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ListadoBusquedaDocumentoKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(ListadoBusquedaDocumento);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1340, 350));
    }// </editor-fold>//GEN-END:initComponents

    private void buscarDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarDocumentoKeyPressed

    }//GEN-LAST:event_buscarDocumentoKeyPressed

    private void BuscarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarDocumentoActionPerformed
        //Eliminamos la Busqueda Actual#######################################################
        DefaultTableModel md =(DefaultTableModel)ListadoBusquedaDocumento.getModel();
        int CantEliminar= ListadoBusquedaDocumento.getRowCount() -1;
        for(int i =CantEliminar; i>=0; i--){
            md.removeRow(i);
        }
        try {
            BuscarEnVentanaInternaDocumentos(buscarDocumento.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Recepcion_Registrar.class.getName()).log(Level.SEVERE, null, ex);
        }
       

    }//GEN-LAST:event_BuscarDocumentoActionPerformed

    private void limpiarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDocumentoActionPerformed
        buscarDocumento.setText("");
    }//GEN-LAST:event_limpiarDocumentoActionPerformed

    private void cancelarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarDocumentoActionPerformed
        //Eliminamos la Busqueda Actual#######################################################
        DefaultTableModel md =(DefaultTableModel)ListadoBusquedaDocumento.getModel();
        int CantEliminar= ListadoBusquedaDocumento.getRowCount() -1;
        for(int i =CantEliminar; i>=0; i--){
            md.removeRow(i);
        }
        buscarDocumento.setText("");
    }//GEN-LAST:event_cancelarDocumentoActionPerformed

    private void ListadoBusquedaDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ListadoBusquedaDocumentoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListadoBusquedaDocumentoKeyPressed

    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        // TODO lo del clik derechoo
        DefaultTableModel modelo;
        int fila1;
        try{
            fila1=ListadoBusquedaDocumento.getSelectedRow();
            if(fila1==-1){
                JOptionPane.showMessageDialog(null,"no se ha seleccionando ninguna fila");
            }
            else{
                try{
                    int validadorConfirmacion = JOptionPane.showConfirmDialog(null, "Está seguro que desea Confirmar Recibido de Documento");
                    if(validadorConfirmacion==0){
                        modelo=(DefaultTableModel)ListadoBusquedaDocumento.getModel();
                        String id_Historico=(String)modelo.getValueAt(fila1, 0);
                        String id_Documento=(String)modelo.getValueAt(fila1, 1);
                        ControlDB_RecibirDocumento controlDB_RecbirDocumento = new ControlDB_RecibirDocumento();
                        int retorno =controlDB_RecbirDocumento.registrarRecibidoDeDocumento(id_Historico, id_Documento);
                        if(retorno == 1){
                            JOptionPane.showMessageDialog(null,"Se registro la confirmación de recibido de Manera Exitosa");
                        }
                        
                        //Eliminamos la Busqueda Actual#######################################################
                        DefaultTableModel md =(DefaultTableModel)ListadoBusquedaDocumento.getModel();
                        int CantEliminar= ListadoBusquedaDocumento.getRowCount() -1;
                        for(int i =CantEliminar; i>=0; i--){
                            md.removeRow(i);
                        }             
                        try {
                            BuscarEnVentanaInternaDocumentos("");
                        } catch (SQLException ex) {
                            Logger.getLogger(Recepcion_Registrar.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
   
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No se pudo Confirmar Documento");
                }
            }
        }catch(Exception e){
        }

    }//GEN-LAST:event_ConfirmarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarDocumento;
    private javax.swing.JMenuItem Confirmar;
    private javax.swing.JPopupMenu ConfirmarRecibido;
    private javax.swing.JTable ListadoBusquedaDocumento;
    private javax.swing.JTextField buscarDocumento;
    private javax.swing.JButton cancelarDocumento;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton limpiarDocumento;
    // End of variables declaration//GEN-END:variables
     public void BuscarEnVentanaInternaDocumentos(String valorConsulta) throws SQLException{               
        DefaultTableModel modelo;
        String [] titulo= {"ID_HISTORICO","ID_DOCUMENTO", "FECHA_ENVIO","NUM_FACTURA","NIT_PROVEEDOR","NOMBRE_PROVEEDOR","NOMBRE_EMPRESA","USUARIO_REGISTRA","USUARIO_DESTINO","CONFIRMACION DE RECIBIDO"};
        String [] registro = new String[10]; 
        modelo = new DefaultTableModel(null, titulo);     
        ArrayList<ConsultarDocumentosParaRecibir> listadoDocumento=null;
         ControlDB_RecibirDocumento controlDB_Documento = new ControlDB_RecibirDocumento();
        listadoDocumento=controlDB_Documento.buscarDocumento(buscarDocumento.getText(),user);
        if(listadoDocumento !=null){
            for(int i =0; i< listadoDocumento.size(); i++){ 
                registro[0]=""+listadoDocumento.get(i).getId_historicoDocumento();
                registro[1]=""+listadoDocumento.get(i).getId_documento();
                registro[2]=""+listadoDocumento.get(i).getFechaRegistro_historicoDocumento();
                registro[3]=""+listadoDocumento.get(i).getNumFactura_documento();
                try{
                    Integer.parseInt(listadoDocumento.get(i).getDig_proveedor());
                    registro[4]=""+listadoDocumento.get(i).getNit_proveedor()+"-"+listadoDocumento.get(i).getDig_proveedor();
                }catch(Exception e){
                    registro[4]=""+listadoDocumento.get(i).getNit_proveedor();
                }
                registro[5]=""+listadoDocumento.get(i).getNombre_proveedor();
                registro[6]=""+listadoDocumento.get(i).getNombre_empresa();
                registro[7]=""+listadoDocumento.get(i).getUsuarioRegistro_historicoDocumento();
                registro[8]=""+listadoDocumento.get(i).getUsuarioDestino_historicoDocumento();
                registro[9]="NO";
                modelo.addRow(registro);
                ListadoBusquedaDocumento.setModel(modelo);
            }   
        }
    }
}
